@model Demo.Web.Models.CLAViewModel

@{
  string? userRole = Context.Session.GetString("UserRole");
  int userId = Context.Session.GetInt32("UserId") ?? 0;
}

<div class=" h-100 w-100">
      <div class="d-flex justify-content-between p-5" style="height: 10%;">
          <h3 id="categoryName"></h3>
          @if(userRole != null && userRole=="Admin")
          {
            <button class="btn btn-primary text-nowrap" style="height: 50px;width: 150px;" onclick="resetProductModal()">Add Product+</button>
          }
      </div>
    <div class="row d-flex align-items-center justify-content-start gap-4 h-25 px-4">
    @if(Model != null && Model.Products != null && Model.Products.Count > 0)
    {
        foreach (ProductViewModel product in Model.Products)
        {
            string productImage = string.IsNullOrEmpty(product.ImageUrl)
                ? "/images/Default_pfp.svg.png"
                : $"/images/product-images/{product.ImageUrl}";
            
            <div class="card d-flex flex-column align-items-center justify-content-center col-2 h-100 cursor-pointer px-3" onclick="viewProductDetails(@product.Id)">
                <div class="d-flex flex-column  align-items-center">
                    <img src="@productImage" alt="Product Image" class="img-fluid mb-3 w-50 h-100">
                    <div class="d-flex flex-column justify-content-center h-100 w-100">
                        <div class="d-flex align-items-center justify-content-center h-50">
                            <h6>@product.Name</h6>
                        </div>
                        @if(userRole != null && userRole=="Admin")
                        {
                          if(userId > 0 && product.UserId == userId)
                          {
                            <div class="d-flex justify-content-end align-items-center h-50 gap-2">
                                <button class="btn btn-sm btn-primary" onclick="event.stopPropagation();getProductDetails(@product.Id)">Edit</button>
                                <button class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#deleteProductModal" onclick="event.stopPropagation();deleteProduct(@product.Id)">Delete</button>
                            </div>
                          }
                        }
                    </div>
                </div>
            </div>
        }
    }
    </div>
    @if(Model == null || Model.Products==null || Model.Products.Count <=0 )
    {
        <p class="text-center">No products available.</p>
    }
   
</div>

<div id="addEditProductView">
    <partial name="_AddEditProduct" model="Model">
</div>

<div class="modal fade" id="deleteProductModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
  aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">
          Delete Confirmation
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="d-flex flex-column align-items-center justify-content-center">
          <p>Are you sure you want to delete this Product?</p>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          No
        </button>
        <button type="button" class="btn btn-primary" id="deleteButton" data-bs-dismiss="modal">Yes</button>
      </div>
    </div>
  </div>
</div>
@section Scripts {
  @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
  }
}
<script src="~/js/cla.js"></script>